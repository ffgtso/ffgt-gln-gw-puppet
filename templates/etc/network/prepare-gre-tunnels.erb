#!/bin/sh
# this file is generated by puppet
# Helper script to populate /etc/network/interfaces.d/ with
# tunnel interfaces.

cat <<EOF >/tmp/puppet-$$.txt
auto ospf-##endpoint_name##
iface ospf-##endpoint_name## inet static
 address ##local_ip##
 netmask 255.255.255.254
 pre-up iptunnel add \$IFACE mode gre local ##local_public_ip## remote ##remote_public_ip## ttl 255
 up ifconfig \$IFACE multicast
 pointopoint ##remote_ip##
 post-up ip link set \$IFACE mtu 1400
 post-up sysctl -w net.ipv4.conf.\$IFACE.rp_filter=0
 post-up ip rule add pref 31000 iif \$IFACE table 42
 post-up ip rule add pref 31001 iif \$IFACE unreachable
 post-up ip route replace ##remote_ip## dev \$IFACE src ##local_ip## table 42
 pre-down ip route del ##remote_ip## dev \$IFACE src ##local_ip## table 42
 pre-down ip rule del pref 31001 iif \$IFACE unreachable
 pre-down ip rule del pref 31000 iif \$IFACE table 42
 post-down iptunnel del \$IFACE mode gre
EOF

cat <<EOF >/tmp/puppet-$$.sh
if [ ! -d /etc/network/interfaces.d ]; then
  mkdir /etc/network/interfaces.d
  echo >>/etc/network/interfaces
  echo "source /etc/network/interfaces.d/\*.cfg" >>/etc/network/interfaces
fi
<% if @have_ospf_peerings == "yes" %>
<% peerings = YAML.load_file(@ospf_peerings); -%>
<% peerings.each_pair do |name,node| -%>
# Skip dummy entries
echo "<%=name%>" | grep >/dev/null dummy
if [ \$? -eq 1 ]; then
sed </tmp/puppet-$$.txt >/etc/network/interfaces.d/ospf-<%=name%>.cfg \\
 -e 's/##endpoint_name##/<%=name%>/g' \\
 -e 's/##local_ip##/<%= node['ipv4src'] %>/g' \\
 -e 's/##remote_ip##/<%= node['ipv4dst'] %>/g' \\
 -e 's/##local_public_ip##/<%= node['pub4src'] %>/g' \\
 -e 's/##remote_public_ip##/<%= node['pub4dst'] %>/g'
fi
<% end -%>
<% end -%>
<% if @have_ospf_links == "yes" %>
<% peerings = YAML.load_file(@ospf_links); -%>
<% peerings.each_pair do |name,node| -%>
# Skip dummy entries
echo "<%=name%>" | grep >/dev/null dummy
if [ \$? -eq 1 ]; then
sed </tmp/puppet-$$.txt >/etc/network/interfaces.d/ospf-<%=name%>.cfg \\
 -e 's/##endpoint_name##/<%=name%>/g' \\
 -e 's/##local_ip##/<%= node['ipv4src'] %>/g' \\
 -e 's/##remote_ip##/<%= node['ipv4dst'] %>/g' \\
 -e 's/##local_public_ip##/<%= node['pub4src'] %>/g' \\
 -e 's/##remote_public_ip##/<%= node['pub4dst'] %>/g'
fi
<% end -%>
<% end -%>
EOF

/bin/sh /tmp/puppet-$$.sh
/bin/rm /tmp/puppet-$$.sh /tmp/puppet-$$.txt
