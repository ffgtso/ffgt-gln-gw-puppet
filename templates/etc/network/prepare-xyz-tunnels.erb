#!/bin/sh
# this file is generated by puppet
# Helper script to populate /etc/network/interfaces.d/ with
# tunnel interfaces.
# Honours mode: value, as of now deals with "gre", "l2tp", "l2tpip". "ovpn" or "direct" will skipped here.

cat <<EOF >/tmp/puppet-gre-$$.txt
auto ##endpoint_name##
iface ##endpoint_name## inet static
 address ##local_ip##
 netmask 255.255.255.254
 pre-up iptunnel add \$IFACE mode gre local ##local_public_ip## remote ##remote_public_ip## ttl 255
 up ifconfig \$IFACE multicast
 pointopoint ##remote_ip##
 post-up ip link set \$IFACE mtu 1400
 post-up sysctl -w net.ipv4.conf.\$IFACE.rp_filter=0
 post-up ip rule add pref 31000 iif \$IFACE table 42
 post-up ip rule add pref 31001 iif \$IFACE unreachable
 post-up ip route replace ##remote_ip## dev \$IFACE src ##local_ip## table 42
 pre-down ip route del ##remote_ip## dev \$IFACE src ##local_ip## table 42
 pre-down ip rule del pref 31001 iif \$IFACE unreachable
 pre-down ip rule del pref 31000 iif \$IFACE table 42
 post-down iptunnel del \$IFACE mode gre
 post-up ip -6 addr add ##local_ip6##/64 dev \$IFACE
 post-up ip -6 route replace ##remote_ip6##/128 dev \$IFACE src ##local_ip6## table 42
 pre-down ip -6 addr del ##local_ip6##/64 dev \$IFACE
EOF

cat <<EOF >/tmp/puppet-l2tp-ip-$$.txt
auto ##endpoint_name##
iface ##endpoint_name## inet static
 pre-up /sbin/ip l2tp add tunnel tunnel_id ##src_id## peer_tunnel_id ##dst_id## encap ip local ##local_public_ip## remote ##remote_public_ip##
 pre-up /sbin/ip l2tp add session name \$IFACE tunnel_id ##src_id## session_id 1 peer_session_id 1
 address ##local_ip##
 netmask 255.255.255.254
 pointopoint ##remote_ip##
 up ifconfig \$IFACE multicast
 post-up ip link set \$IFACE mtu 1400
 post-up sysctl -w net.ipv4.conf.\$IFACE.rp_filter=0
 post-up ip rule add pref 31000 iif \$IFACE table 42
 post-up ip rule add pref 31001 iif \$IFACE unreachable
 post-up ip route replace ##remote_ip## dev \$IFACE src ##local_ip## table 4
 pre-down ip route del ##remote_ip## dev \$IFACE src ##local_ip## table 42
 pre-down ip rule del pref 31001 iif \$IFACE unreachable
 pre-down ip rule del pref 31000 iif \$IFACE table 42
 post-down ip l2tp del session name \$IFACE
 post-down ip l2tp del tunnel tunnel_id ##src_id## peer_tunnel_id ##dst_id##
 post-up ip -6 addr add ##local_ip6##/64 dev \$IFACE
 post-up ip -6 route replace ##remote_ip6##/128 dev \$IFACE src ##local_ip6## table 42
 pre-down ip -6 addr del ##local_ip6##/64 dev \$IFACE
EOF

cat <<EOF >/tmp/puppet-l2tp-udp-$$.txt
auto ##endpoint_name##
iface ##endpoint_name## inet static
 pre-up /sbin/ip l2tp add tunnel tunnel_id ##src_id## peer_tunnel_id ##dst_id## encap udp udp_sport ##src_port## udp_dport ##dst_port## local ##local_public_ip## remote ##remote_public_ip##
 pre-up /sbin/ip l2tp add session name \$IFACE tunnel_id ##src_id## session_id 1 peer_session_id 1
 address ##local_ip##
 netmask 255.255.255.254
 pointopoint ##remote_ip##
 up ifconfig \$IFACE multicast
 post-up ip link set \$IFACE mtu 1400
 post-up sysctl -w net.ipv4.conf.\$IFACE.rp_filter=0
 post-up ip rule add pref 31000 iif \$IFACE table 42
 post-up ip rule add pref 31001 iif \$IFACE unreachable
 post-up ip route replace ##remote_ip## dev \$IFACE src ##local_ip## table 4
 pre-down ip route del ##remote_ip## dev \$IFACE src ##local_ip## table 42
 pre-down ip rule del pref 31001 iif \$IFACE unreachable
 pre-down ip rule del pref 31000 iif \$IFACE table 42
 post-down ip l2tp del session name \$IFACE
 post-down ip l2tp del tunnel tunnel_id ##src_id## peer_tunnel_id ##dst_id##
 post-up ip -6 addr add ##local_ip6##/64 dev \$IFACE
 post-up ip -6 route replace ##remote_ip6##/128 dev \$IFACE src ##local_ip6## table 42
 pre-down ip -6 addr del ##local_ip6##/64 dev \$IFACE
EOF

cat <<EOF >/tmp/puppet-6in4-$$.txt
auto ##endpoint_name##
iface ##endpoint_name## inet6 v4tunnel
 address ##local_ip6##
 netmask 64
 endpoint ##remote_public_ip##
 ttl 64
 up ip link set mtu 1280 dev \$IFACE
 post-up ip -6 route add ##local_ip6##/128 dev \$IFACE && exit 0
 post-up ip -6 route add ##remote_ip6##/128 dev \$IFACE && exit 0
 post-up ip -6 route add ##local_ip6##/128 dev \$IFACE src ##local_ip6## table 42 && exit 0
 post-up ip -6 route add ##remote_ip6##/128 dev \$IFACE src ##local_ip6## table 42 && exit 0
 pre-down ip -6 route del ##local_ip6##/128 dev \$IFACE && exit 0
 pre-down ip -6 route del ##remote_ip6##/128 dev \$IFACE && exit 0
 pre-down ip -6 route del ##local_ip6##/128 dev \$IFACE src ##local_ip6## table 42 && exit 0
 pre-down ip -6 route del ##remote_ip6##/128 dev \$IFACE src ##local_ip6## table 42 && exit 0
EOF

cat <<EOF >/tmp/puppet-$$.sh
if [ ! -d /etc/network/interfaces.d ]; then
  mkdir /etc/network/interfaces.d
  echo >>/etc/network/interfaces
  grep "^source /etc/network/interfaces.d/\\*\$" /etc/network/interfaces || echo "source /etc/network/interfaces.d/*" >>/etc/network/interfaces
else
  sed -i -e 's%^source /etc/network/interfaces.d/\\*\\.cfg$%source /etc/network/interfaces.d/*%g' /etc/network/interfaces
fi

<% peerings = YAML.load_file(@gre_yaml); -%>
<% peerings.each_pair do |name,node| -%>
<% if name["dummy"] == "dummy" -%>
# Skipped dummy entry: <%=name%>
<% else -%>
if [ -e /etc/network/interfaces.d/<%=name%>.cfg ]; then
  (/sbin/ifdown --force <%=name%> ; exit 0)
  /bin/rm /etc/network/interfaces.d/<%=name%>.cfg
fi
if [ -e /etc/network/interfaces.d/<%=name%> ]; then
  (/sbin/ifdown --force <%=name%> ; exit 0)
fi

<% if node['mode'] == "gre" -%>
# Type: <%= node['mode'] %>
sed </tmp/puppet-gre-$$.txt >/etc/network/interfaces.d/<%=name%> \\
  -e 's/##endpoint_name##/<%=name%>/g' \\
  -e 's/##local_ip##/<%= node['ipv4src'] %>/g' \\
  -e 's/##remote_ip##/<%= node['ipv4dst'] %>/g' \\
  -e 's/##local_ip6##/<%= node['ipv6src'] %>/g' \\
  -e 's/##remote_ip6##/<%= node['ipv6dst'] %>/g' \\
  -e 's/##local_public_ip##/<%= node['pub4src'] %>/g' \\
  -e 's/##remote_public_ip##/<%= node['pub4dst'] %>/g'
<% end -%>
<% if node['mode'] == "" -%>
# Type: GRE (<%= node['mode'] %>)
sed </tmp/puppet-gre-$$.txt >/etc/network/interfaces.d/<%=name%> \\
  -e 's/##endpoint_name##/<%=name%>/g' \\
  -e 's/##local_ip##/<%= node['ipv4src'] %>/g' \\
  -e 's/##remote_ip##/<%= node['ipv4dst'] %>/g' \\
  -e 's/##local_ip6##/<%= node['ipv6src'] %>/g' \\
  -e 's/##remote_ip6##/<%= node['ipv6dst'] %>/g' \\
  -e 's/##local_public_ip##/<%= node['pub4src'] %>/g' \\
  -e 's/##remote_public_ip##/<%= node['pub4dst'] %>/g'
<% end -%>
<% if node['mode'] == "6in4" -%>
# Type: <%= node['mode'] %>
sed </tmp/puppet-6in4-$$.txt >/etc/network/interfaces.d/<%=name%> \\
  -e 's/##endpoint_name##/<%=name%>/g' \\
  -e 's/##local_ip##/<%= node['ipv4src'] %>/g' \\
  -e 's/##remote_ip##/<%= node['ipv4dst'] %>/g' \\
  -e 's/##local_ip6##/<%= node['ipv6src'] %>/g' \\
  -e 's/##remote_ip6##/<%= node['ipv6dst'] %>/g' \\
  -e 's/##local_public_ip##/<%= node['pub4src'] %>/g' \\
  -e 's/##remote_public_ip##/<%= node['pub4dst'] %>/g'
<% end -%>
<% if node['mode'] == "l2tp" -%>
src_id="`echo <%= node['ipv4src'] %> | awk '{split($1, byte, "."); printf("%d", byte[3]*256+byte[4]);}'`"
dst_id="`echo <%= node['ipv4dst'] %> | awk '{split($1, byte, "."); printf("%d", byte[3]*256+byte[4]);}'`"
src_port="`echo <%= node['ipv6src'] %> | awk -Wposix '{n=split($1, word, ":"); idx= "0x" substr(word[4], 2); printf("%d\n", idx+16000);}'`"
dst_port="`echo <%= node['ipv6dst'] %> | awk -Wposix '{n=split($1, word, ":"); idx= "0x" substr(word[4], 2); printf("%d\n", idx+16000);}'`"
sed </tmp/puppet-l2tp-udp-$$.txt >/etc/network/interfaces.d/<%=name%> \\
  -e "s/##src_port##/\${src_port}/g" \\
  -e "s/##dst_port##/\${dst_port}/g" \\
  -e "s/##src_id##/\${src_id}/g" \\
  -e "s/##dst_id##/\${dst_id}/g" \\
  -e 's/##endpoint_name##/<%=name%>/g' \\
  -e 's/##local_ip##/<%= node['ipv4src'] %>/g' \\
  -e 's/##remote_ip##/<%= node['ipv4dst'] %>/g' \\
  -e 's/##local_ip6##/<%= node['ipv6src'] %>/g' \\
  -e 's/##remote_ip6##/<%= node['ipv6dst'] %>/g' \\
  -e 's/##local_public_ip##/<%= node['pub4src'] %>/g' \\
  -e 's/##remote_public_ip##/<%= node['pub4dst'] %>/g'
<% end -%>
<% if node['mode'] == "l2tpip" -%>
src_id="`echo <%= node['ipv4src'] %> | awk '{split($1, byte, "."); printf("%d", byte[3]*256+byte[4]);}'`"
dst_id="`echo <%= node['ipv4dst'] %> | awk '{split($1, byte, "."); printf("%d", byte[3]*256+byte[4]);}'`"
sed </tmp/puppet-l2tp-ip-$$.txt >/etc/network/interfaces.d/<%=name%> \\
  -e "s/##src_id##/\${src_id}/g" \\
  -e "s/##dst_id##/\${dst_id}/g" \\
  -e 's/##endpoint_name##/<%=name%>/g' \\
  -e 's/##local_ip##/<%= node['ipv4src'] %>/g' \\
  -e 's/##remote_ip##/<%= node['ipv4dst'] %>/g' \\
  -e 's/##local_ip6##/<%= node['ipv6src'] %>/g' \\
  -e 's/##remote_ip6##/<%= node['ipv6dst'] %>/g' \\
  -e 's/##local_public_ip##/<%= node['pub4src'] %>/g' \\
  -e 's/##remote_public_ip##/<%= node['pub4dst'] %>/g'
<% end -%>
(/sbin/ifup <%=name%> ; exit 0)
<% end -%>
<% end -%>
EOF

/bin/sh /tmp/puppet-$$.sh
/bin/rm /tmp/puppet-$$.sh /tmp/puppet-$$.txt
