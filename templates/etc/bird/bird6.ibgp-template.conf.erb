# this is file is generated by puppet

function ok_to_export_<%= @name.gsub('-', '_') %>_ibgp() {
<% if @dont_export_prefix != "none" -%>
  if (net ~ [<%= @dont_export_prefix %>]) then return false;
<% end -%>
  return true;
}

<% peerings = YAML.load_file(@gre_yaml); -%>
<% peerings.each_pair do |gretun,node| -%>
<% @peers.each do |tunnel,pref| -%>
<% if gretun == tunnel -%>
protocol bgp i_<%= tunnel.gsub('-', '_') %> {
  table mesh;
  local as <%= @our_as %>;
  source address <%= node['ipv6src'] %>;
  neighbor <%= node['ipv6dst'] %><% if node['ipv6dst'].match(/^fe80:/i) %> % '<%= tunnel %>'<% end -%> as <%= @our_as %>;
  import filter {
    bgp_local_pref = <%= pref %>;
<% if @dfz != "" -%>
    if is_default() then accept;
<% end -%>
    if in_prefix_range_ibgp() then accept;
    reject;
  };
  export filter {
    if (source = RTS_BGP || source = RTS_STATIC_DEVICE || source = RTS_STATIC || RTS_DEVICE) then {
<% if @dfz != "" -%>
      if is_default() then accept;
<% end -%>
      if in_prefix_range_ibgp() && ok_to_export_<%= @name.gsub('-', '_') %>_ibgp() then accept;
      reject;
    }
  };
<% if @next_hop_self != "" -%>  next hop self;
<% end -%>
<% if @bgp_options != "" -%>  <%= @bgp_options %>
<% end -%>
}

<% end -%>
<% end -%>
<% end -%>
