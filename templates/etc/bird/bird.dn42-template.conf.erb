# this is file is generated by puppet

table dn42_<%= @mesh_code.gsub('-', '_') %>;

# pipe between mesh and dn42_<%= @mesh_code.gsub('-', '_') %> table
protocol pipe pipe_bgp_<%= @mesh_code.gsub('-', '_') %> {
  table mesh;
  peer table dn42_<%= @mesh_code.gsub('-', '_') %>;
  import where (! is_self_<%=@mesh_code.gsub('-', '_') %>() && ! is_default);
  export where source = RTS_BGP || source = RTS_STATIC;
};

# template for icvpn route exchange via bgp
# we exchange freifunk and dn42 routes with peers
# chaosvpn should not be exchanged because chaosvpn misses a route to not
# directly connected communities in the usual setup
template bgp dn42 {
  table dn42_<%= @mesh_code.gsub('-', '_') %>;
  local as <%= @icvpn_as %>;
  # source address needs to be set per peer, due to tunnels
  import where is_freifunk() || is_dn42();
  export where ((source = RTS_BGP) || (source = RTS_STATIC)) && (is_freifunk() || is_dn42();
};

<% peerings = YAML.load_file(@dn42_peerings); -%>
<% peerings.each_pair do |name,node| -%>

protocol bgp 'dn42_<%=name%>' from dn42 {
  source address <%= node['ipv4src'] %>;
  neighbor <%= node['ipv4dst'] %> as <%= node['peeras'] %>;
};
<% end -%>
