# this is file is generated by puppet BUT this file won't be overwritten by puppet
# ================================================================================
#
# The idea is to set a working default but have the user locally adapt this file.
#
# THERE BE DRAGONS! On recreating the stuff with the same .pp on a different host,
# the local changes of course are GONE!

#
#                                 YOU HAVE BEEN WARNED!
#

#function rt_import(int asn; int set peer_asns; prefix set peer_nets)
#{
#  if ! (net ~ peer_nets) then return false;
#  if ! (bgp_path.last ~ peer_asns) then return false;
#  if bgp_path.first != asn then return false;
#  if bgp_path.len > 64 then return false;
#  if bgp_next_hop != from then return false;
#  return true;
#}

#function rt_import_all(int asn)
#{
#  if net_martian() || net_local() then return false;
#  if bgp_path.first != asn then return false;
#  if bgp_path.len > 64 then return false;
#  if bgp_next_hop != from then return false;
#  return true;
#}

<% @peers.each do |tunnel,args| -%>
<% array = args.split(';') -%>
<% if array[2].to_s != "" -%>
protocol static local_<%= tunnel.gsub('-', '_') %>_2 {
  table mesh;
  route <%= array[2] %> reject;
};
<% end -%>
<% end -%>

filter import_ebgp_<%= @name.gsub('-', '_') %> {
  if is_default() then accept;
  if is_global_unicast() then accept;
  reject;
}

filter export_ebgp_<%= @name.gsub('-', '_') %> {
  if (source = RTS_BGP || source = RTS_STATIC_DEVICE || source = RTS_STATIC) then {
    if is_self_<%= @mesh_code.gsub('-', '_') %>() then accept;
<% @peers.each do |tunnel,args| -%>
<% array = args.split(';') -%>
<% if array[2].to_s != "" -%>
   if proto = local_<%= tunnel.gsub('-', '_') %>_2 then accept;
<% end -%>
<% end -%>
 }
  reject;
}

# template for ebgp route exchange
template bgp ebgp_<%= @name.gsub('-', '_') %> {
  table mesh;
  local as <%= @our_as %>;
};
