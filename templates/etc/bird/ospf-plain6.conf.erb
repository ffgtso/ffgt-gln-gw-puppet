# this file is generated by puppet

# more generic OSPF configuration
# puppet input:
#  - name (implicit via class)       -- peergroup name
#  - ospf_peerings (filename or "")  -- yaml for bgp peers, if any.
#  - ospf_links (filename or "")     -- yaml of ospf peers, if any.
#  - prefix6 (e.g. "2001:2016::/32") -- own prefix routes within should be exchanged

<% if @ospf_peerings != "" -%>
<% peerings = YAML.load_file(@ospf_peerings); -%>
<% peerings.each_pair do |name,node| -%>
protocol static ospf_<%=name.gsub('-', '_') %> {
  table ospf_<%= @name.gsub('-', '_') %>;
  route <%= node['ipv6src'] %>/128 via "<%=name%>";
  #route <%= node['ipv6dst'] %>/128 via "<%=name%>";
}

<% end -%>
protocol ospf bb_<%= @name.gsub('-', '_') %> {
  table ospf_<%= @name.gsub('-', '_') %>;
  #import all;
  import where !is_default();
  export filter {
    #if (is_default() && (source = RTS_OSPF && ospf_tag = 10)) then reject; # learned from int_XXXX
    if is_default() && source = RTS_BGP then accept;
    if source = RTS_STATIC then accept; #|| is_in_<%= @mesh_code.gsub('-', '_') %>_prefix() then accept;
    reject;
  };

  # Backbone
  area 0 {
    networks {
      <%= @range_ipv6 %>;
    };
<% peerings = YAML.load_file(@ospf_peerings); -%>
<% peerings.each_pair do |name,node| -%>
    interface "<%=name%>" {
      cost <%= node['cost'] %>;
      type pointopoint;
      hello 5; retransmit 2; wait 10; dead 20;
      check link;
      authentication none;
    };

<% end -%>
    interface "icvpn" {
      cost 70;
      stub;
    };
  };
}
<% end %>

<% if @have_ospf_links == "yes" %>
<% peerings = YAML.load_file(@ospf_links); -%>
<% peerings.each_pair do |name,node| -%>
protocol static ospf_<%=name.gsub('-', '_')%> {
  table ospf_<%= @name.gsub('-', '_') %>;
  route <%= node['ipv6src'] %>/128 via "ospf-<%=name%>";
  #route <%= node['ipv6dst'] %>/128 via "ospf-<%=name%>";
}
<% end -%>

protocol ospf int_<%= @mesh_code.gsub('-', '_') %> {
  table ospf_<%= @name.gsub('-', '_') %>;
  import keep filtered;
  import <% if @ospf_type == "root" %>where !is_default()<% else %>all<% end %>;
  export filter {
    ospf_tag = 10;
    if (is_default() && (source = RTS_BGP)) then accept;
    if source = RTS_STATIC then accept;
    if (net ~ [ <%= @prefix6 %>+ ])  then accept;
    reject;
  };

  # Links between bgp? & gw??
  area 10 {
<% peerings = YAML.load_file(@ospf_links); -%>
<% peerings.each_pair do |name,node| -%>
    interface "<%=name%>" {
      cost <%= node['cost'] %>;
      type pointopoint;
      hello 5; retransmit 2; wait 10; dead 20;
      check link;
      authentication none;
    };

<% end -%>
    interface "br-<%= @mesh_code %>" {
      cost 70;
      stub;
    };
  };
}
<% end %>
