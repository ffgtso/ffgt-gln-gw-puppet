# this is file is generated by puppet

table icvpn_<%= @mesh_code.gsub('-', '_') %>;

# return true if between /8 and /24
function in_prefix_range_icvpn() {
  if net.len < 8 then return false;
  if net.len > 24 then return false;
  return true;
}

# wusel, 2015-08-04: add a route to the mesh table for the ICPVPN network,
# to prevent pings between ICVPN host to go upstream.
protocol static icvpn_static {
  import all;
  table icvpn_<%= @mesh_code.gsub('-', '_') %>;
  route 10.207.0.0/16 via "icvpn";
}

# pipe between mesh and icvpn_<%= @mesh_code.gsub('-', '_') %> table
protocol pipe pipe_bgp_<%= @mesh_code.gsub('-', '_') %> {
  table mesh;
  peer table icvpn_<%= @mesh_code.gsub('-', '_') %>;
  import all;
  export where source = RTS_BGP || source = RTS_STATIC_DEVICE || source = RTS_STATIC;
};

# template for icvpn route exchange via bgp
# we exchange freifunk and, maybe, dn42 routes with peers
# chaosvpn should not be exchanged because chaosvpn misses a route to not
# directly connected communities in the usual setup
template bgp icvpn {
  table icvpn_<%= @mesh_code.gsub('-', '_') %>;
  local as <%= @icvpn_as %>;
  source address <%= @icvpn_ipv4_address %>;
  import where in_prefix_range_icvpn() && (is_freifunk()<% if @include_chaos == "yes" %> || is_chaos()<% end %><% if @include_dn42 == "yes" %> || is_dn42()<% end %>);
  export filter {
    if proto = "icvpn_static" then reject;
    if in_prefix_range_icvpn() then {
      if <%= @mesh_code.gsub('-', '_') %>_export_prefix() then accept;
      if ((source = RTS_BGP || source = RTS_STATIC_DEVICE || source = RTS_STATIC) && (is_freifunk()<% if @include_chaos == "yes" %> || is_chaos()<% end %><% if @include_dn42 == "yes" %> || is_dn42()<% end %>)) then accept;
    }
    reject;
  };
};
