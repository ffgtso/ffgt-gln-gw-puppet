# this file is generated by puppet

# bird OSPF configuration

table ospf_<%= @mesh_code.gsub('-', '_') %>;
<% if @announce_rid == "yes" %>
protocol static ospf_routerid {
  import all;
  table ospf_<%= @mesh_code.gsub('-', '_') %>;
  route <%=@router_id%>/32 via "br-rid";
}<% end -%>

# pipe between mesh and ospfmesh_<%= @mesh_code.gsub('-', '_') %> table
# import all from mesh, export from ospf_xxxx to mesh own network and default route(s)
protocol pipe pipe_ospf_<%= @mesh_code.gsub('-', '_') %> {
  table mesh;
  peer table ospf_<%= @mesh_code.gsub('-', '_') %>;
  import all; # where ! is_self_<%= @mesh_code.gsub('-', '_') %>();
  export filter {
    if is_self_ffgt() || is_default() then accept;
    reject;
  };
}

<% if @have_ospf_peerings == "yes" %>
<% peerings = YAML.load_file(@ospf_peerings); -%>
<% peerings.each_pair do |name,node| -%>
<% if node['ipv4src'] != "" -%>
protocol static ospf_<%=name%> {
  table ospf_<%= @mesh_code.gsub('-', '_') %>;
  route <%= node['ipv4src'] %>/32 via "ospf-<%=name%>";
  #route <%= node['ipv4dst'] %>/32 via "ospf-<%=name%>";
}
<% end -%>
<% end -%>

protocol ospf bb_<%= @mesh_code.gsub('-', '_') %> {
  table ospf_<%= @mesh_code.gsub('-', '_') %>;
  #import all;
  import keep filtered;
  import where !is_default();
  #import filter {
  #  if (is_default() && source = RTS_OSPF) then reject; # Don't learn default via OSPF
  #  accept;
  #}
  export filter {
    #if (is_default() && (source = RTS_OSPF && ospf_tag = 10)) then reject; # learned from int_XXXX
    if is_default() && source = RTS_BGP then accept;
    if source = RTS_STATIC then accept; #|| is_in_<%= @mesh_code.gsub('-', '_') %>_prefix() then accept;
    reject;
  };

  # Backbone
  area 0 {
    networks {
      <%= @range_ipv4 %>;
    };
<% peerings = YAML.load_file(@ospf_peerings); -%>
<% peerings.each_pair do |name,node| -%>
    interface "ospf-<%=name%>" {
      cost <%= node['cost'] %>;
      type pointopoint;
      hello 5; retransmit 2; wait 10; dead 20;
      check link;
      authentication none;
    };

<% end -%>
    interface "icvpn" {
      cost 70;
      stub;
    };
  };
}
<% end %>

<% if @have_ospf_links == "yes" %>
<% peerings = YAML.load_file(@ospf_links); -%>
<% peerings.each_pair do |name,node| -%>
<% if node['ipv4src'] != "" -%>
protocol static ospf_<%= name.gsub('-', '_') %> {
  table ospf_<%= @mesh_code.gsub('-', '_') %>;
  route <%= node['ipv4src'] %>/32 via "ospf-<%=name%>";
  #route <%= node['ipv4dst'] %>/32 via "ospf-<%=name%>";
}
<% end -%>
<% end -%>

protocol ospf int_<%= @mesh_code.gsub('-', '_') %> {
  table ospf_<%= @mesh_code.gsub('-', '_') %>;
  import keep filtered;
  import <% if @ospf_type == "root" %>where !is_default()<% else %>all<% end %>;
  export filter {
    ospf_tag = 10;
    if (is_default() && (source = RTS_BGP)) then accept;
    if source = RTS_STATIC then accept;
    if is_in_<%= @mesh_code.gsub('-', '_') %>_prefix() then accept;
    reject;
  };

  # Links between bgp? & gw??
  area 10 {
<% peerings = YAML.load_file(@ospf_links); -%>
<% peerings.each_pair do |name,node| -%>
    interface "ospf-<%= name.gsub('-', '_') %>" {
      cost <%= node['cost'] %>;
      type pointopoint;
      hello 5; retransmit 2; wait 10; dead 20;
      check link;
      authentication none;
    };

<% end -%>
    interface "br-<%= @mesh_code.gsub('-', '_') %>" {
      cost 70;
      stub;
    };
  };
}
<% end %>
