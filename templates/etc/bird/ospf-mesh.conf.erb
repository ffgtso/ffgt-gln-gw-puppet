# this file is generated by puppet
# bird OSPF configuration

function ok_to_export_<%= @mesh_code.gsub('-', '_') %>_ospf() {
  if (source = RTS_BGP) then return false;
<% if @dont_export_prefix != "none" -%>
  if (net ~ [<%= @dont_export_prefix %>]) then return false;
<% end -%>
  return true;
}

filter ex_ospf_<%= @mesh_code.gsub('-', '_') %>_root {
<% if defined?(node['ospf_export_filter4']) && node['ospf_export_filter4'] -%>
  include "/etc/bird/bird.conf.d/<%=node['ospf_export_filter4']%>";

<% end -%>
  if (source = RTS_BGP) then reject;
  if (source = RTS_STATIC || source = RTS_DEVICE || source = RTS_STATIC_DEVICE) then accept;
  reject;
}

filter im_ospf_<%= @mesh_code.gsub('-', '_') %>_root {
<% if defined?(node['ospf_import_filter4']) && node['ospf_import_filter4'] -%>
  include "/etc/bird/bird.conf.d/<%=node['ospf_import_filter4']%>";

<% end -%>
<% if @dfz == "" -%>    if is_default() then accept;<% end -%>
  if (net.len = 32) then accept;
  if (net.len >= 1 && net.len <= 32) then accept;
  reject;
}

filter ex_ospf_<%= @mesh_code.gsub('-', '_') %>_leaf {
<% if defined?(node['ospf_export_filter4']) && node['ospf_export_filter4'] -%>
  include "/etc/bird/bird.conf.d/<%=node['ospf_export_filter4']%>";

<% end -%>
    if (source = RTS_BGP) then reject;
<% if @dfz == "" -%>    if (is_default() && (source = RTS_BGP || source = RTS_STATIC || source = RTS_DEVICE || source = RTS_STATIC_DEVICE)) then accept;<% end -%>
    if (source = RTS_STATIC || source = RTS_DEVICE || source = RTS_STATIC_DEVICE) then accept;
    reject;
}

filter im_ospf_<%= @mesh_code.gsub('-', '_') %>_leaf {
<% if defined?(node['ospf_import_filter4']) && node['ospf_import_filter4'] -%>
  include "/etc/bird/bird.conf.d/<%=node['ospf_import_filter4']%>";

<% end -%>
<% if @dfz == "" -%>    if is_default() then accept;<% end -%>
    if (net.len = 32) then accept;
    if (net.len >= 1 && net.len <= 32) then accept;
    reject;
}

<% if @have_ospf_peerings == "yes" -%>
protocol ospf o_p_<%= @mesh_code.gsub('-', '_') %> {
  table mesh;
  import keep filtered;
  import filter im_ospf_<%= @mesh_code.gsub('-', '_') %>_<%=@ospf_type%>;
  export filter ex_ospf_<%= @mesh_code.gsub('-', '_') %>_<%=@ospf_type%>;
  instance id 0;

  area 0 {
#    networks {
#<% @mynets.each do |prefix| %>  <%= prefix %>;<% end %>
#    };
<% peerings = YAML.load_file(@ospf_peerings); -%>
<% peerings.each_pair do |name,node| -%>
    interface "<%=name%>" {
      cost <%= node['cost'] %>;
      type pointopoint;
      hello 5; retransmit 2; wait 10; dead 20;
      check link;
      authentication none;
    };
<% end -%>
  };
}
<% end -%>

<% if @have_ospf_links == "yes" -%>
protocol ospf o_l_<%= @mesh_code.gsub('-', '_') %> {
  table mesh;
  import keep filtered;
  import filter im_ospf_<%= @mesh_code.gsub('-', '_') %>_<%=@ospf_type%>;
  export filter ex_ospf_<%= @mesh_code.gsub('-', '_') %>_<%=@ospf_type%>;
  instance id 10;

  # Links between bgp? & gw??
  area 10 {
<% peerings = YAML.load_file(@ospf_links); -%>
<% peerings.each_pair do |name,node| -%>
    interface "<%=name%>" {
      cost <%= node['cost'] %>;
      type pointopoint;
      hello 5; retransmit 2; wait 10; dead 20;
      check link;
      authentication none;
    };

<% end -%>
  };
}
<% end -%>