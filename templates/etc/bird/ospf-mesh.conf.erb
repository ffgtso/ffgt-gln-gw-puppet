# this file is generated by puppet
# bird OSPF configuration

function ok_to_export_<%= @mesh_code.gsub('-', '_') %>_ospf() {
<% if @dont_export_prefix != "none" -%>
  if (net ~ [<%= @dont_export_prefix %>]) then return false;
<% end -%>
  return true;
}

<% if @have_ospf_peerings == "yes" || @have_ospf_links == "yes" -%>
filter ex_ospf_<%= @mesh_code.gsub('-', '_') %> {
<% if @ospf_export_filter != "" -%>
  include "/etc/bird/bird.conf.d/<%=@ospf_export_filter%>";

<% end -%>
  if (source = RTS_STATIC) then accept;
  if (source = RTS_DEVICE) then accept;
  if (source = RTS_STATIC_DEVICE) then accept;
  reject;
}

filter im_ospf_<%= @mesh_code.gsub('-', '_') %> {
<% if @ospf_import_filter != "" -%>
  include "/etc/bird/bird.conf.d/<%=@ospf_import_filter%>";

<% end -%>
  accept;
}

protocol ospf o_<%= @mesh_code.gsub('-', '_') %> {
  table mesh;
  import keep filtered;
  import filter im_ospf_<%= @mesh_code.gsub('-', '_') %>;
  export filter ex_ospf_<%= @mesh_code.gsub('-', '_') %>;
<% if @ospf_instance_id == "" -%>
  instance id 0;
<% else -%>
  instance id <%=@ospf_instance_id%>;
<% end -%>

  area 0 {
<% if @have_ospf_peerings == "yes" -%>
<% peerings = YAML.load_file(@ospf_peerings); -%>
<% peerings.each_pair do |name,node| -%>
    interface "<%=name%>" {
      cost <%= node['cost'] %>;
<% if defined?(node['type']) && node['type'] -%>
      type <%= node['type'] %>;
<% else -%>
      type pointopoint;
<% end -%>
<% if defined?(node['options']) && node['options'] -%>
      <%= node['options'] %>;
<% end -%>
    };

<% end -%>
<% end -%>
<% if @have_ospf_links == "yes" -%>
<% peerings = YAML.load_file(@ospf_links); -%>
<% peerings.each_pair do |name,node| -%>
    interface "<%=name%>" {
      cost <%= node['cost'] %>;
<% if defined?(node['type']) && node['type'] -%>
      type <%= node['type'] %>;
<% else -%>
      type pointopoint;
<% end -%>
<% if defined?(node['options']) && node['options'] -%>
      <%= node['options'] %>;
<% end -%>
    };
<% end -%>
<% end -%>
  }:
}
<% end -%>
