# this is file is generated by puppet

template bgp ebgp_filt_<%=@name.gsub('-', '_')%> {
  table mesh;
  local as <%= @our_as %>;
  import none;
  export none;
  next hop self;
}

define BOGON_ASNS = [0, 23456, 64496..131071, 4200000000..4294967295];

<% peerings = YAML.load_file(@gre_yaml); -%>
<% peerings.each_pair do |tunnelname,node| -%>
<% if (defined?(node['ouras']) && node['ouras']) then local_ouras=node['ouras']; else local_ouras=@our_as; end -%>

<% if defined?(node['ipv4dst']) && node['ipv4dst'] -%>
filter peer_in_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%>
prefix set <%=node['import4'].gsub('-', '_').gsub(':', '__')%>_PFX;
<% if defined?(node['reimport_filter4']) && node['reimport_filter4']  -%>
<% if node['reimport_filter4'] != "ANY" && node['reimport_filter4'] != "DEFONLY" -%>
prefix set <%=node['reimport_filter4'].gsub('-', '_').gsub(':', '__')%>_PFX;
<% end -%>
<% end -%>
int set bogon_asns;
{
<% if defined?(node['bgpmaxpfxlen4']) && node['bgpmaxpfxlen4']
     bgp_max_pfx_len = Integer(node['bgpmaxpfxlen4'])
   else
     bgp_max_pfx_len = 24
   end -%>
<% if defined?(node['community_in']) && node['community_in']
     community_in = Integer(node['community_in'])
   else
     community_in = 0
   end -%>
  # Scrub BLACKHOLE Community from peering partners
  bgp_community.delete((65535, 666));

<% if defined?(node['import_filter4']) && node['import_filter4'] -%>
  # Initially, to do special-case rejects
  include "/etc/bird/bird.conf.d/<%=node['import_filter4']%>";

<% end -%>
  # ignore bogon AS_PATHs
  bogon_asns = BOGON_ASNS;
  if (bgp_path ~ bogon_asns) then {
    #print "Import rejected: bogon AS_PATH: ", net, " ", bgp_path;
    reject;
  }
<% if defined?(node['import4']) && node['import4'] -%>
<% if node['import4'] == "ANY" -%>
  if (avoid_martians() && bgp_path.len <= <%= bgp_max_pfx_len %>) then {
<% else -%>
<% if node['import4'] == "DEFONLY" -%>
  if (is_default()) then {
<% else -%>
  include "/etc/bird/bird.conf.d/<%= node['import4'] %>_PFX4.inc";
  if (net ~ <%= node['import4'].gsub('-', '_').gsub(':', '__') %>_PFX) then {
<% end -%>
<% end -%>
<% if defined?(node['reimport_filter4']) && node['reimport_filter4']  -%>
<% if node['reimport_filter4'] != "ANY" && node['reimport_filter4'] != "DEFONLY" -%>
    # Don't import our prefixes we'll export
    include "/etc/bird/bird.conf.d/<%=node['reimport_filter4']%>_PFX4.inc";
    if (net ~ <%=node['reimport_filter4'].gsub('-', '_').gsub(':', '__')%>_PFX) then {
      #print "REJECT: Import of own export prefix: ", net, " via ", bgp_path;
      reject;
    }

<% end -%>
<% end -%>
    bgp_med = 0;
<% if defined?(node['bgppref']) && node['bgppref'] -%>
    bgp_local_pref = <%= node['bgppref'] %>;
<% else -%>
    bgp_local_pref = 100;
<% end -%>
<% if defined?(node['import_filter4']) && node['import_filter4'] -%>

  # Again; this time to modify route attributes.
  include "/etc/bird/bird.conf.d/<%=node['import_filter4']%>";
<% end -%>

    # Scrub BGP Communities (RFC 7454 Section 11)
<% if Integer(local_ouras) < 65536 -%>
    bgp_community.delete([(<%=local_ouras%>, *)]);
    bgp_community.add((<%=local_ouras%>, 1));
<% end -%>
    bgp_large_community.delete([(<%=local_ouras%>, 0, *), (<%=local_ouras%>, 5, *), (<%=local_ouras%>, 6, *)]);
    bgp_large_community.add((<%=local_ouras%>, <%=community_in%>, <%= node['peeras'] %>));
    bgp_large_community.add((<%=local_ouras%>, <%=community_in%>, 0));
    accept;
  }
<% else -%>
  # No import4: line found
<% end -%>
  reject;
}

filter peer_out_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%>
prefix set <%=node['export4'].gsub('-', '_').gsub(':', '__')%>_PFX;
int set bogon_asns;
{
<% if defined?(node['export_filter4']) && node['export_filter4'] -%>
  include "/etc/bird/bird.conf.d/<%=node['export_filter4']%>";
<% end -%>
<% if @sitelocal_prefix != "none" -%>
  if (net ~ [ <%=@sitelocal_prefix%> ]) then {
    #print "Forced export: ", net, " ", bgp_path;
<% if defined?(node['bgpprepend']) && node['bgpprepend'] -%>
    # Path Prepending: <%=node['bgpprepend']%> times (1<=n<=5)
<% numprep=Integer(node['bgpprepend']) -%>
<% if (numprep<1) then numprep=1; end -%>
<% if (numprep>5) then numprep=5; end -%>
<% for i in 1..numprep do -%>
    bgp_path.prepend(<%=local_ouras%>);
<% end -%>
<% end -%>
    accept;
  }
<% end -%>
<% if @no_export_prefix != "none" -%>
  if (net ~ [ <%=@no_export_prefix%> ]) then  {
    #print "Blocked export: ", net, " ", bgp_path;
    reject;
  }
<% end -%>

<% if defined?(node['export4']) && node['export4'] -%>
<% if node['export4'] == "ANY" -%>
  if (avoid_martians()) then {
<% else -%>
<% if node['export4'] == "DEFONLY" -%>
  if (is_default()) then {
<% else -%>
  include "/etc/bird/bird.conf.d/<%=node['export4']%>_PFX4.inc";
  if (net ~ <%=node['export4'].gsub('-', '_').gsub(':', '__')%>_PFX) then {

    # Do not propagate routes learned from upstreams!
    if ((<%=local_ouras%>, 400, 0) ~ bgp_large_community) then {
      #print "Export rejected: route from upstream, AS_PATH: ", net, " ", bgp_path;
      reject;
    }

<% end -%>
<% end -%>
    # ignore bogon AS_PATHs
    bogon_asns = BOGON_ASNS;
    if (bgp_path ~ bogon_asns) then {
      #print "Export rejected: bogon AS_PATH: ", net, " ", bgp_path;
      reject;
    }

    if ((65535, 65281) ~ bgp_community) then {
      print "Export rejected: no-export community set: ", net, " ", bgp_path;
      reject;
    }

    if ((65535, 65282) ~ bgp_community) then {
      print "Export rejected: no-advertise community set: ", net, " ", bgp_path;
      reject;
    }

<% if @location != 0 -%>
    if ((<%=local_ouras%>, 800, *) ~ bgp_large_community) then {
      if ((<%=local_ouras%>, 800, <%=@location%>) !~ bgp_large_community) then {
        bgp_path.prepend(<%=local_ouras%>);
      }
    }
    if ((<%=local_ouras%>, 801, *) ~ bgp_large_community) then {
      if ((<%=local_ouras%>, 801, <%=@location%>) !~ bgp_large_community) then {
        bgp_path.prepend(<%=local_ouras%>);
        bgp_path.prepend(<%=local_ouras%>);
      }
    }
    if ((<%=local_ouras%>, 802, *) ~ bgp_large_community) then {
      if ((<%=local_ouras%>, 802, <%=@location%>) !~ bgp_large_community) then {
        bgp_path.prepend(<%=local_ouras%>);
        bgp_path.prepend(<%=local_ouras%>);
        bgp_path.prepend(<%=local_ouras%>);
      }
    }
<% end %>

    if ((<%=local_ouras%>, 2, <%=node['peeras']%>) ~ bgp_large_community || (<%=local_ouras%>, 2, 0) ~ bgp_large_community) then {
      bgp_path.prepend(<%=local_ouras%>);
    } else if ((<%=local_ouras%>, 3, <%=node['peeras']%>) ~ bgp_large_community || (<%=local_ouras%>, 3, 0) ~ bgp_large_community) then {
      bgp_path.prepend(<%=local_ouras%>);
      bgp_path.prepend(<%=local_ouras%>);
    }
    if ((<%=local_ouras%>, 4, <%=node['peeras']%>) ~ bgp_large_community || (<%=local_ouras%>, 4, 0) ~ bgp_large_community) then {
      reject;
    }

<% if defined?(node['bgpprepend']) && node['bgpprepend'] -%>
    # Path Prepending: <%=node['bgpprepend']%> times (1<=n<=5)
<% numprep=Integer(node['bgpprepend']) -%>
<% if (numprep<1) then numprep=1; end -%>
<% if (numprep>5) then numprep=5; end -%>
<% for i in 1..numprep do -%>
    bgp_path.prepend(<%=local_ouras%>);
<% end -%>
<% end -%>
    accept;
  }
<% else -%>
  # No export4: line found
<% end -%>
  reject;
}

protocol bgp e_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%> from ebgp_filt_<%=@name.gsub('-', '_')%> {
  local as <%=local_ouras%>;
  source address <%= node['ipv4src'] %>;
  neighbor <%= node['ipv4dst'] %> as <%= node['peeras'] %>;
  bfd graceful;
  import keep filtered;
  import filter peer_in_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%>;
  export filter peer_out_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%>;
<% if defined?(node['multihop']) && node['multihop'] -%>  multihop <%= node['multihop'] %>;
<% end -%>
<% if defined?(node['direct']) && node['direct'] -%>  direct;
<% end -%>
<% if defined?(node['passive']) && node['passive'] -%>  passive;
<% end -%>
<% if defined?(node['passwd4']) && node['passwd4'] -%>  password "<%= node['passwd4'] %>";
<% else -%>
<% if defined?(node['passwd']) && node['passwd'] -%>  password "<%= node['passwd'] %>";
<% end -%>
<% end -%>
<% if defined?(node['exportlimit4']) && node['exportlimit4'] -%>  export limit <%=node['exportlimit4']%> action block;
<% end -%>
};


<% end -%>
<% end -%>
