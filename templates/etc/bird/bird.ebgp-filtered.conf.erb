# this is file is generated by puppet

template bgp ebgp_filt_<%=@name.gsub('-', '_')%> {
  table mesh;
  local as <%= @our_as %>;
  import none;
  export none;
  next hop self;
}

define BOGON_ASNS = [0, 23456, 64496..131071, 4200000000..4294967295];

<% peerings = YAML.load_file(@gre_yaml); -%>
<% peerings.each_pair do |tunnelname,node| -%>

<% if defined?(node['ipv4dst']) && node['ipv4dst'] -%>
filter peer_in_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%>
prefix set <%=node['import4'].gsub('-', '_').gsub(':', '__')%>_PFX;
<% if defined?(node['export4']) && node['export4']  -%>
<% if node['export4'] != "ANY" && node['export4'] != "DEFONLY" -%>
prefix set <%=node['export4'].gsub('-', '_').gsub(':', '__')%>_PFX;
<% end -%>
<% end -%>
int set bogon_asns;
{
  # Scrub BLACKHOLE Community from peering partners
  bgp_community.delete((65535, 666));

<% if defined?(node['import_filter4']) && node['import_filter4'] -%>
  include "/etc/bird/bird.conf.d/<%=node['import_filter4']%>";

<% end -%>
  # ignore bogon AS_PATHs
  bogon_asns = BOGON_ASNS;
  if ( bgp_path ~ bogon_asns ) then {
    print "Import rejected: bogon AS_PATH: ", net, " ", bgp_path;
    reject;
  }
<% if defined?(node['import4']) && node['import4'] -%>
<% if node['import4'] == "ANY" -%>
  if avoid_martians() then {
<% else -%>
<% if node['import4'] == "DEFONLY" -%>
  if is_default() then {
<% else -%>
  include "/etc/bird/bird.conf.d/<%= node['import4'] %>_PFX4.inc";
  if (net ~ <%= node['import4'].gsub('-', '_').gsub(':', '__') %>_PFX) then {
<% end -%>
<% end -%>
<% if defined?(node['export4']) && node['export4']  -%>
<% if node['export4'] != "ANY" && node['export4'] != "DEFONLY" -%>
    # Don't import our prefixes we'll export
    include "/etc/bird/bird.conf.d/<%=node['export4']%>_PFX4.inc";
    if (net ~ <%=node['export4'].gsub('-', '_').gsub(':', '__')%>_PFX) then {
      print "Import of own prefix rejected: ", net, " via ", bgp_path;
      reject;
    }

<% end -%>
<% end -%>
    bgp_med = 0;
    bgp_local_pref = 100;
    # Scrub BGP Communities (RFC 7454 Section 11)
<% if Integer(@our_as) < 65536 -%>
    bgp_community.delete([(<%=@our_as%>, *)]);
    bgp_community.add((<%=@our_as%>,1)); /* mark peering routes as peering routes */
<% end -%>
    bgp_large_community.delete([(<%=@our_as%>, *, *)]);
    bgp_large_community.add((<%=@our_as%>, 0, 1)); /* mark peering routes as peering routes */
    accept;
  }
<% else -%>
  # No import4: line found
<% end -%>
  reject;
}

filter peer_out_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%>
prefix set <%=node['export4'].gsub('-', '_').gsub(':', '__')%>_PFX;
int set bogon_asns;
{
<% if defined?(node['export_filter4']) && node['export_filter4'] -%>
  include "/etc/bird/bird.conf.d/<%=node['export_filter4']%>";
<% end -%>
<% if @sitelocal_prefix != "none" -%>
  if (net ~ [ <%=@sitelocal_prefix%> ]) then {
    print "Forced export: ", net, " ", bgp_path;
    accept;
  }
<% end -%>
<% if @no_export_prefix != "none" -%>
  if (net ~ [ <%=@no_export_prefix%> ]) then  {
    print "Blocked export: ", net, " ", bgp_path;
    reject;
  }
<% end -%>

<% if defined?(node['export4']) && node['export4'] -%>
<% if node['export4'] == "ANY" -%>
  if avoid_martians() then {
<% else -%>
<% if node['export4'] == "DEFONLY" -%>
  if is_default() then {
<% else -%>
  include "/etc/bird/bird.conf.d/<%=node['export4']%>_PFX4.inc";
  if (net ~ <%=node['export4'].gsub('-', '_').gsub(':', '__')%>_PFX) then {
<% end -%>
<% end -%>
    # ignore bogon AS_PATHs
    bogon_asns = BOGON_ASNS;
    if ( bgp_path ~ bogon_asns ) then {
      print "Export rejected: bogon AS_PATH: ", net, " ", bgp_path;
      reject;
    }

    if ((<%=@our_as%>, 2, <%=node['peeras']%>) ~ bgp_large_community || (<%=@our_as%>, 2, 0) ~ bgp_large_community) then {
      bgp_path.prepend(<%=@our_as%>);
    } else if ((<%=@our_as%>, 3, <%=node['peeras']%>) ~ bgp_large_community || (<%=@our_as%>, 3, 0) ~ bgp_large_community) then {
      bgp_path.prepend(<%=@our_as%>);
      bgp_path.prepend(<%=@our_as%>);
    }
    if ((<%=@our_as%>, 4, <%=node['peeras']%>) ~ bgp_large_community || (<%=@our_as%>, 4, 0) ~ bgp_large_community) then {
      reject;
    }

    accept;
  }
<% else -%>
  # No export4: line found
<% end -%>
  reject;
}

protocol bgp e_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%> from ebgp_filt_<%=@name.gsub('-', '_')%> {
<% if (defined?(node['ouras']) && node['ouras']) -%>
  local as <%= node['ouras'] %>;
<% end -%>
  source address <%= node['ipv4src'] %>;
  neighbor <%= node['ipv4dst'] %> as <%= node['peeras'] %>;
  import keep filtered;
  import filter peer_in_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%>;
  export filter peer_out_<%=node['name'].gsub('-', '_')%>_<%=@name.gsub('-', '_')%>;
<% if defined?(node['multihop']) && node['multihop'] -%>  multihop <%= node['multihop'] %>;
<% end -%>
<% if defined?(node['passwd']) && node['passwd'] -%>  password "<%= node['passwd'] %>";
<% end -%>
<% if defined?(node['export_limit4']) && node['export_limit4'] -%>  export limit <%=node['export_limit4']%> action block;
<% end -%>
};


<% end -%>
<% end -%>
